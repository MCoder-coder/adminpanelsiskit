{"version":3,"file":"resize-handle.directive.d.ts","sources":["resize-handle.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Renderer2, ElementRef, OnDestroy, NgZone } from '@angular/core';\r\nimport { ResizableDirective } from './resizable.directive';\r\nimport { Edges } from './interfaces/edges.interface';\r\n/**\r\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\r\n *\r\n * For example\r\n *\r\n * ```html\r\n * <div mwlResizable>\r\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\r\n * </div>\r\n * ```\r\n */\r\nexport declare class ResizeHandleDirective implements OnDestroy {\r\n    private renderer;\r\n    private element;\r\n    private zone;\r\n    private resizable;\r\n    /**\r\n     * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\r\n     */\r\n    resizeEdges: Edges;\r\n    private eventListeners;\r\n    constructor(renderer: Renderer2, element: ElementRef, zone: NgZone, resizable: ResizableDirective);\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMousedown(event: MouseEvent | TouchEvent, clientX: number, clientY: number): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseup(clientX: number, clientY: number): void;\r\n    private onMousemove;\r\n    private unsubscribeEventListeners;\r\n}\r\n"]}