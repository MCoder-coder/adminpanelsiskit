{"version":3,"file":"calendar-day-view.component.d.ts","sources":["calendar-day-view.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { CalendarEvent } from 'calendar-utils';\r\nimport { Subject } from 'rxjs';\r\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\r\nimport { PlacementArray } from 'positioning';\r\nimport { CalendarWeekViewBeforeRenderEvent } from '../week/calendar-week.module';\r\nexport declare type CalendarDayViewBeforeRenderEvent = CalendarWeekViewBeforeRenderEvent;\r\n/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-day-view>\r\n * ```\r\n */\r\nexport declare class CalendarDayViewComponent {\r\n    /**\r\n     * The current view date\r\n     */\r\n    viewDate: Date;\r\n    /**\r\n     * An array of events to display on view\r\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n     */\r\n    events: CalendarEvent[];\r\n    /**\r\n     * The number of segments in an hour. Must divide equally into 60.\r\n     */\r\n    hourSegments: number;\r\n    /**\r\n     * The height in pixels of each hour segment\r\n     */\r\n    hourSegmentHeight: number;\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    dayStartHour: number;\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    dayStartMinute: number;\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    dayEndHour: number;\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    dayEndMinute: number;\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    refresh: Subject<any>;\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    locale: string;\r\n    /**\r\n     * The grid size to snap resizing and dragging of events to\r\n     */\r\n    eventSnapSize: number;\r\n    /**\r\n     * The placement of the event tooltip\r\n     */\r\n    tooltipPlacement: PlacementArray;\r\n    /**\r\n     * A custom template to use for the event tooltips\r\n     */\r\n    tooltipTemplate: TemplateRef<any>;\r\n    /**\r\n     * Whether to append tooltips to the body or next to the trigger element\r\n     */\r\n    tooltipAppendToBody: boolean;\r\n    /**\r\n     * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n     * will be displayed immediately.\r\n     */\r\n    tooltipDelay: number | null;\r\n    /**\r\n     * A custom template to use to replace the hour segment\r\n     */\r\n    hourSegmentTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use for day view events\r\n     */\r\n    eventTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use for event titles\r\n     */\r\n    eventTitleTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use for event actions\r\n     */\r\n    eventActionsTemplate: TemplateRef<any>;\r\n    /**\r\n     * Whether to snap events to a grid when dragging\r\n     */\r\n    snapDraggedEvents: boolean;\r\n    /**\r\n     * A custom template to use for the all day events label text\r\n     */\r\n    allDayEventsLabelTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use for the current time marker\r\n     */\r\n    currentTimeMarkerTemplate: TemplateRef<any>;\r\n    /**\r\n     * Called when an event title is clicked\r\n     */\r\n    eventClicked: EventEmitter<{\r\n        event: CalendarEvent<any>;\r\n        sourceEvent: any;\r\n    }>;\r\n    /**\r\n     * Called when an hour segment is clicked\r\n     */\r\n    hourSegmentClicked: EventEmitter<{\r\n        date: Date;\r\n        sourceEvent: MouseEvent;\r\n    }>;\r\n    /**\r\n     * Called when an event is resized or dragged and dropped\r\n     */\r\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent<any>>;\r\n    /**\r\n     * An output that will be called before the view is rendered for the current day.\r\n     * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\r\n     */\r\n    beforeViewRender: EventEmitter<CalendarWeekViewBeforeRenderEvent>;\r\n}\r\n"]}