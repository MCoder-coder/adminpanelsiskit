{"version":3,"file":"draggable-scroll-container.directive.d.ts","sources":["draggable-scroll-container.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\r\n/**\r\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\r\n * ```html\r\n  <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\r\n    <div mwlDraggable>Drag me!</div>\r\n  </div>\r\n  ```\r\n */\r\nexport declare class DraggableScrollContainerDirective {\r\n    elementRef: ElementRef<HTMLElement>;\r\n    /**\r\n     * Trigger the DragStart after a long touch in scrollable container when true\r\n     * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\r\n     */\r\n    activeLongPressDrag: boolean;\r\n    /**\r\n     * Configuration of a long touch\r\n     * Duration in ms of a long touch before activating DragStart\r\n     * Delta of the\r\n     * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\r\n     */\r\n    longPressConfig: {\r\n        duration: number;\r\n        delta: number;\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(elementRef: ElementRef<HTMLElement>);\r\n}\r\n"]}