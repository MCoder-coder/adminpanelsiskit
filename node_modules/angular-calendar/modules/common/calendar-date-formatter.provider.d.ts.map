{"version":3,"file":"calendar-date-formatter.provider.d.ts","sources":["calendar-date-formatter.provider.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA","sourcesContent":["import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\r\n/**\r\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\r\n *\r\n * If you wish, you may override any of the defaults via angulars DI. For example:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n * import { formatDate } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * @Injectable()\r\n * class CustomDateFormatter extends CalendarDateFormatter {\r\n *\r\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\r\n *     return formatDate(date, 'EEE', locale); // use short week days\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *   provide: CalendarDateFormatter,\r\n *   useClass: CustomDateFormatter\r\n * }]\r\n * ```\r\n */\r\nexport declare class CalendarDateFormatter extends CalendarAngularDateFormatter {\r\n}\r\n"]}